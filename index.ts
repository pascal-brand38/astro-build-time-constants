// Copyright (c) Pascal Brand
// MIT License

import fs from 'fs'
import type { AstroConfig, AstroIntegration } from 'astro';

function runAstrobuildTimeConstants() {
  const now = new Date()
  const epoch = Math.round(now.getTime() / 1000);

  let text = '// Generated by astro-build-time-constants\n\n'
  text += `export const digits2 = (number: number) => number < 10 ? '0' + number : '' + number\n`
  text += `export const astrobuildTimeConstants = {\n`
  text += `  epoch: ${epoch},\n`,
  text += `  seconds: ${now.getSeconds()},\n`,
  text += `  minutes: ${now.getMinutes()},\n`,
  text += `  hours: ${now.getHours()},\n`,
  text += `  fullYear: ${now.getFullYear()},\n`,
  text += `  month: ${now.getMonth()+1},\n`,
  text += `  date: ${now.getDate()},\n`,
  text += `  iso: "${now.toISOString()}",\n`,
  text += `}\n`

  const filePath = './src/astro-build-time-constants.ts'
  fs.writeFileSync(filePath, text)
  console.log(`Generate ${filePath}`)
}


// initialize the astro sprite integration
export default function buildTimeConstants(): AstroIntegration {
  return {
    name: 'astro-build-time-constants',
    hooks: {
      "astro:config:done": function ({ config: astroConfig }: { config: AstroConfig} ) {
        runAstrobuildTimeConstants()
      },
    },
  }
}
